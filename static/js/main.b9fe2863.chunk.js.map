{"version":3,"sources":["TodoItem.js","TodoList.js","TodosFilter.js","Footer.js","TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","handleCompleted","handleDelete","currentClass","completed","react_default","a","createElement","className","type","id","onClick","checked","title","TodoList","todos","handleCompletedAll","allCompleted","style","display","onChange","htmlFor","map","src_TodoItem","TodosFilter","handlerFilterAll","handlerFilterActive","handlerFilterCompleted","href","Footer","handlerClearCompleted","length","filter","src_TodosFilter","TodoApp","state","inputValue","filterStatus","undefined","addInputValue","event","_this","setState","target","value","handleSubmit","preventDefault","newTodo","Date","concat","Object","toConsumableArray","todoId","objectSpread2","every","_this2","this","Fragment","onSubmit","placeholder","count","src_TodoList","handleEditing","edit","src_Footer","React","Component","App","src_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b9fe2863.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, handleCompleted, handleDelete }) => {\n  const currentClass = todo.completed ? 'completed' : '';\n\n  return (\n    <li className={currentClass}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"todo-1\"\n          onClick={() => handleCompleted(todo.id)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleDelete(todo.id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.string.isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  todos,\n  handleCompleted,\n  handleCompletedAll,\n  allCompleted,\n  handleDelete,\n}) => (\n\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={handleCompletedAll}\n      checked={allCompleted}\n    />\n    <label\n      htmlFor=\"toggle-all\"\n    >\n      Mark all as complete\n    </label>\n\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          handleCompleted={handleCompleted}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n  handleCompletedAll: PropTypes.func.isRequired,\n  allCompleted: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = (\n  { handlerFilterAll, handlerFilterActive, handlerFilterCompleted }\n) => (\n  <ul className=\"filters\">\n    <li>\n      <a href=\"#/\" className=\"selected\" onClick={handlerFilterAll}>All</a>\n    </li>\n\n    <li>\n      <a href=\"#/active\" onClick={handlerFilterActive}>Active</a>\n    </li>\n\n    <li>\n      <a href=\"#/completed\" onClick={handlerFilterCompleted}>Completed</a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  handlerFilterAll: PropTypes.func.isRequired,\n  handlerFilterActive: PropTypes.func.isRequired,\n  handlerFilterCompleted: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  todos,\n  handlerFilterAll,\n  handlerFilterActive,\n  handlerFilterCompleted,\n  handlerClearCompleted,\n}) => (\n\n  <footer\n    className=\"footer\"\n    style={todos.length > 0 ? { display: 'block' } : { display: 'none' }}\n  >\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length}\n      {' '}\nitems left\n    </span>\n\n    <TodosFilter\n      handlerFilterAll={handlerFilterAll}\n      handlerFilterActive={handlerFilterActive}\n      handlerFilterCompleted={handlerFilterCompleted}\n    />\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={handlerClearCompleted}\n      style={todos.filter(todo => todo.completed).length > 0\n        ? { display: 'block' }\n        : { display: 'none' }}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlerFilterAll: PropTypes.func.isRequired,\n  handlerFilterActive: PropTypes.func.isRequired,\n  handlerFilterCompleted: PropTypes.func.isRequired,\n  handlerClearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    inputValue: '',\n    allCompleted: false,\n    filterStatus: undefined,\n  }\n\n  addInputValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.inputValue) {\n      return;\n    }\n\n    this.setState((state) => {\n      const newTodo = {\n        title: this.state.inputValue,\n        id: +new Date(),\n        completed: false,\n      };\n\n      return {\n        todos: [...state.todos, newTodo],\n        inputValue: '',\n      };\n    });\n  }\n\n  handleCompleted = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (todo.id === todoId\n        ? {\n          ...todo,\n          completed: !todo.completed,\n        }\n        : todo\n      )),\n    }));\n    this.setState(state => (\n      { allCompleted: state.todos.every(todo => todo.completed) }\n    ));\n  }\n\n  handleDelete = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== todoId),\n    }));\n  }\n\n  handleCompletedAll = () => {\n    this.setState(state => ({\n      allCompleted: !state.allCompleted,\n      todos: state.todos.map(todo => ({\n        ...todo, completed: !state.allCompleted,\n      })),\n    }));\n  }\n\n  handlerFilterAll = () => {\n    this.setState({\n      filterStatus: undefined,\n    });\n  }\n\n  handlerFilterActive = () => {\n    this.setState({\n      filterStatus: false,\n    });\n  }\n\n  handlerFilterCompleted = () => {\n    this.setState({\n      filterStatus: true,\n    });\n  }\n\n  handlerClearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.addInputValue}\n              value={this.state.inputValue}\n              count={this.state.count}\n            />\n          </form>\n        </header>\n        <TodoList\n          todos={this.state.todos.filter(\n            todo => (this.state.filterStatus !== undefined\n              ? this.state.filterStatus === todo.completed\n              : true)\n          )}\n          handleCompleted={this.handleCompleted}\n          handleCompletedAll={this.handleCompletedAll}\n          allCompleted={this.state.allCompleted}\n          handleDelete={this.handleDelete}\n          handleEditing={this.handleEditing}\n          edit={this.state.edit}\n        />\n        <Footer\n          todos={this.state.todos}\n          handlerFilterAll={this.handlerFilterAll}\n          handlerFilterActive={this.handlerFilterActive}\n          handlerFilterCompleted={this.handlerFilterCompleted}\n          handlerClearCompleted={this.handlerClearCompleted}\n        />\n      </>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nconst App = () => (\n  <section className=\"todoapp\">\n    <TodoApp />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}