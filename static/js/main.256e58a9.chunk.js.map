{"version":3,"sources":["TodoItem.js","TodoList.js","TodosFilter.js","Footer.js","Header.js","TodoApp.js","App.js","index.js"],"names":["TodoItem","_ref","todo","toggleTodoCompleted","removeTodo","currentClass","completed","react_default","a","createElement","className","type","id","onClick","checked","title","TodoList","todos","toggleTodoCompletedAll","allCompleted","style","display","onChange","htmlFor","map","src_TodoItem","TodosFilter","setFilter","filterTypes","currentFilter","Object","values","filter","href","event","target","innerText","Footer","removeAllCompleted","length","src_TodosFilter","Header","state","inputValue","addInputValue","_this","setState","value","handleSubmit","preventDefault","newTodo","Date","props","addTodo","onSubmit","this","placeholder","React","Component","all","active","TodoApp","prev","concat","toConsumableArray","todoId","objectSpread2","every","_this2","Fragment","src_Header","src_TodoList","src_Footer","App","src_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.256e58a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, toggleTodoCompleted, removeTodo }) => {\n  const currentClass = todo.completed ? 'completed' : '';\n\n  return (\n    <li className={currentClass}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"todo-1\"\n          onClick={() => toggleTodoCompleted(todo.id)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.string.isRequired,\n  toggleTodoCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({\n  todos,\n  toggleTodoCompleted,\n  toggleTodoCompletedAll,\n  allCompleted,\n  removeTodo,\n}) => (\n\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={toggleTodoCompletedAll}\n      checked={allCompleted}\n    />\n    <label\n      htmlFor=\"toggle-all\"\n    >\n      Mark all as complete\n    </label>\n\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          toggleTodoCompleted={toggleTodoCompleted}\n          removeTodo={removeTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleTodoCompleted: PropTypes.func.isRequired,\n  toggleTodoCompletedAll: PropTypes.func.isRequired,\n  allCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({\n  setFilter,\n  filterTypes,\n  currentFilter,\n}) => (\n  <ul className=\"filters\">\n    {Object.values(filterTypes).map(filter => (\n      <li>\n        <a\n          href=\"#/\"\n          onClick={event => setFilter(event.target.innerText)}\n          className={currentFilter === filter ? 'selected' : ''}\n        >\n          {filter}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filterTypes: PropTypes.string.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  todos,\n  setFilter,\n  removeAllCompleted,\n  filterTypes,\n  currentFilter,\n}) => (\n\n  <footer\n    className=\"footer\"\n    style={todos.length > 0 ? { display: 'block' } : { display: 'none' }}\n  >\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length}\n      {' '}\nitems left\n    </span>\n\n    <TodosFilter\n      setFilter={setFilter}\n      filterTypes={filterTypes}\n      currentFilter={currentFilter}\n    />\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={removeAllCompleted}\n      style={todos.filter(todo => todo.completed).length > 0\n        ? { display: 'block' }\n        : { display: 'none' }}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilter: PropTypes.func.isRequired,\n  removeAllCompleted: PropTypes.func.isRequired,\n  filterTypes: PropTypes.string.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  addInputValue = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.inputValue) {\n      return;\n    }\n\n    const newTodo = {\n      title: this.state.inputValue,\n      id: +new Date(),\n      completed: false,\n    };\n\n    this.props.addTodo(newTodo);\n    this.setState({\n      inputValue: '',\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.addInputValue}\n            value={this.state.inputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst filterTypes = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    allCompleted: false,\n    filter: filterTypes.all,\n  }\n\n  addTodo = todo => this.setState(prev => ({\n    todos: [...prev.todos, todo],\n    filter: filterTypes.all,\n  }))\n\n  removeTodo = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== todoId),\n    }));\n  }\n\n  toggleTodoCompleted = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (todo.id === todoId\n        ? {\n          ...todo,\n          completed: !todo.completed,\n        }\n        : todo\n      )),\n    }));\n    this.setState(state => (\n      { allCompleted: state.todos.every(todo => todo.completed) }\n    ));\n  }\n\n  toggleTodoCompletedAll = () => {\n    this.setState(state => ({\n      allCompleted: !state.allCompleted,\n      todos: state.todos.map(todo => ({\n        ...todo, completed: !state.allCompleted,\n      })),\n    }));\n  }\n\n  removeAllCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  setFilter = (currentFilter) => {\n    this.setState({ filter: currentFilter });\n  };\n\n  render() {\n    return (\n      <>\n        <Header\n          addTodo={this.addTodo}\n        />\n        <TodoList\n          todos={this.state.todos.filter(\n            (todo) => {\n              if (this.state.filter === 'Active') {\n                return todo.completed === false;\n              }\n\n              if (this.state.filter === 'Completed') {\n                return todo.completed === true;\n              }\n\n              return todo;\n            }\n          )}\n          toggleTodoCompleted={this.toggleTodoCompleted}\n          toggleTodoCompletedAll={this.toggleTodoCompletedAll}\n          allCompleted={this.state.allCompleted}\n          removeTodo={this.removeTodo}\n        />\n        <Footer\n          todos={this.state.todos}\n          setFilter={this.setFilter}\n          removeAllCompleted={this.removeAllCompleted}\n          filterTypes={filterTypes}\n          currentFilter={this.state.filter}\n        />\n      </>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nconst App = () => (\n  <section className=\"todoapp\">\n    <TodoApp />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}